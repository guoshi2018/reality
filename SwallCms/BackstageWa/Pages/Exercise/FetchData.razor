@page "/exercise/fetchdata"
@attribute [NavItemFlag(
     Enabled = true,
     Icon = "oi-bolt",
     IconAtRear = false,
     LinkTo = "/exercise/fetchdata",
     Text = "fetch data",
     Tooltip = ""
)]
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("start to request to server api...");
        //forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        //forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>(Configing.WFApiUrl);
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>(Configing.Api_RandomWeatherForcast);
    }
}
