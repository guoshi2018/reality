<div class="card bg-light mt-3" style="width:22rem ">
    <div class="card-body">
        <h3 class="card-title">Password Component</h3>
        <p class="card-text">
            <label>
                Password:
                <input @oninput="_onPwdChanged"
                       placeholder="@PlaceHolder"
                       required
                       type="@(_showPwd ? "text" : "password")"
                       value="@_pwd" />
            </label>
            <span class="text-danger">@_validationMessage</span>
        </p>
        <button class="btn btn-primary" @onclick="_toggleShowPwd">
            Show / Hide password
        </button>
    </div>
</div>

@code {
    private bool _showPwd;
    private string? _pwd;
    private string? _validationMessage;

    [Parameter]
    public string? Pwd { get; set; }

    [Parameter]
    public string? PlaceHolder { get; set; }

    [Parameter]
    public EventCallback<string> PwdChanged { get; set; }

    //protected override void OnParametersSet()
    //{
    //    _pwd = Pwd;
    //}

    private Task _onPwdChanged(ChangeEventArgs e)
    {
        _pwd = e?.Value?.ToString();

        if (_pwd != null && _pwd.Contains(' '))
        {
            _validationMessage = "Spaces not allowed!";

            return Task.CompletedTask;
        }
        else
        {
            _validationMessage = string.Empty;

            return PwdChanged.InvokeAsync(_pwd);
        }
    }

    private void _toggleShowPwd()
    {
        _showPwd = !_showPwd;
        //  StateHasChanged();
    }
}
